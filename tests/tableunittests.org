* Table Tests
   These are the core unit tests for our tables.
   When making changes to table systems you should run these.

   This is also a little demonstration of some of the capabilities of the system.
   To run, run the "Org Execute All Tables" command

** Straight column copy test
   Copy from A => B and check that it worked
    |  a   |  b   |   c    |
    |------+------+--------|
    | 0.04 | 0.04 | PASSED |
    | 0.62 | 0.62 | PASSED |
    | 0.82 | 0.82 | PASSED |
    | 0.04 | 0.04 | PASSED |
    #+TBLFM:$1=rand();%.2f::$2=$1::$3=passed($1==$2,$3)

** Relative column copy test
   Copy from -2 => -1 and check that it worked

    |  a   |  b   |   c    |
    |------+------+--------|
    | 0.01 | 0.01 | PASSED |
    | 0.84 | 0.84 | PASSED |
    | 0.40 |  0.4 | PASSED |
    | 0.38 | 0.38 | PASSED |
    #+TBLFM:$1=rand();%.2f::$2=$-1::$3=passed($-2 == $-1)

** Simple Boolean Comparisons
   Check greater than and less than comparisons work

    | a | b |      |   c   |   d    |
    |---+---+------+-------+--------|
    | 1 | 2 | a>b  | False | PASSED |
    | 1 | 2 | a<b  | True  | PASSED |
    | 2 | 1 | a>b  | True  | PASSED |
    | 2 | 1 | a<b  | False | PASSED |
    | 1 | 2 | a<=b | True  | PASSED |
    | 1 | 2 | a>=b | False | PASSED |
    | 1 | 2 | a==b | False | PASSED |
    | 2 | 1 | a<=b | False | PASSED |
    | 2 | 1 | a>=b | True  | PASSED |
    | 1 | 1 | a==b | True  | PASSED |
    #+TBLFM:@2$4=$1>$2::@2$5=passed($4==False)::@3$4=$1<$2::@3$5=passed(bool($4)==True)::@4$4=$-3>$-2::@4$5=passed($-1==True)::@5$4=$-3<$-2::@5$5=passed($-1==False)::@6$4=$1<=$2::@6$5=passed($-1)::@7$4=$1>=$2::@8$4=$1==$2::@7$5=passed($-1==False)::@8$5=passed($-1==False)::@9$4=$1<=$2::@9$5=passed($-1==False)::@10$4=$1>=$2::@11$4=$1==$2::@10$5=passed($-1==True)::@11$5=passed($-1==True)


** Add Sub
   Simple addition and subtraction tests

    | s1 | s2 | desc | result |   ok   |
    |----+----+------+--------+--------|
    |  1 |  2 | a+b  |      3 | PASSED |
    |  2 |  1 | a-b  |      1 | PASSED |
    | -1 |  2 | -a+b |      1 | PASSED |
    |  2 |  3 | a-b  |     -1 | PASSED |
    #+TBLFM:@2$4=$1+$2::@2$5=passed($-1==3)::@3$4=$1-$2::@3$5=passed($-1==1)::@4$4=$1+$2::@4$5=passed($-1==1)::@5$4=$1-$2::@5$5=passed($-1==-1)

** Mult Div
   Basic multiplication and division tests

    | s1 | s2 | desc | result |   ok   |
    |----+----+------+--------+--------|
    | 10 |  5 | a*b  |     50 | PASSED |
    | 10 |  5 | a/b  |    2.0 | PASSED |
    |  2 |  5 | a**b |     32 | PASSED |
    | 10 |  3 | a%b  |      1 | PASSED |
    #+TBLFM:@2$4=$1*$2::@2$5=passed($-1==50)::@3$4=$1/$2::@3$5=passed(int($-1)==2)::@4$4=$1**$2::@4$5=passed($-1==32)::@5$4=$1%$2::@5$5=passed($-1==1)

** Bool Ops
   Some more boolean operations

    |   s1  |   s2  |  desc  | result |   ok   |
    |-------+-------+--------+--------+--------|
    | True  |       | not a  | False  | PASSED |
    | False |       | not a  | True   | PASSED |
    | True  | False | a != b | True   | PASSED |
    | True  | True  | a != b | False  | PASSED |
    | True  | False | a == b | False  | PASSED |
    | True  | True  | a == b | True   | PASSED |
    #+TBLFM:@2$4=not $1::@2$5=passed($-1==False)::@3$4=not $1::@3$5=passed($-1==True)::@4$4=$1!=$2::@4$5=passed($-1==True)::@5$4=$1!=$2::@5$5=passed($-1==False)::@6$4=$1==$2::@6$5=passed($-1==False)::@7$4=$1==$2::@8$5=passed($-1==True)

** Highlighting Cells
   Cell highlight test

    | a  | b  | c  | e  | f  |
    |----+----+----+----+----|
    | r  | r  | r  | r  | r  |
    | g  | g  | g  | g  | g  |
    | b  | b  | b  | b  | b  |
    | y  | y  | y  | y  | y  |
    | c  | c  | c  | c  | c  |
    | p  | p  | p  | p  | p  |
    | o  | o  | o  | o  | o  |
    | pi | pi | pi | pi | pi |
    #+TBLFM:@2=highlight(@<,"red","r")::@3=highlight(@3,"green","g")::@4=highlight(@4,"blue","b")::@5=highlight(@5,"yellow","y")::@6=highlight(@6,"cyan","c")::@7=highlight(@7,"purple","p")::@8=highlight(@8,"orange","o")::@9=highlight(@9,"pink","pi")

** Basic Functions
   Test some of the basic functions

    | source 1 | source 2 |         desc        |       result      |   ok   |
    |----------+----------+---------------------+-------------------+--------|
    | -1       |          | abs                 | 1                 | PASSED |
    | 1.1      |          | ceil                | 2                 | PASSED |
    | 1.1      |          | floor               | 1                 | PASSED |
    | 1.1      |          | int                 | 1                 | PASSED |
    | 0        |          | bool                | False             | PASSED |
    | 1        |          | float               | 1.0               | PASSED |
    | 1.5      |          | round               | 2.0               | PASSED |
    | 1.9      |          | trunc               | 1                 | PASSED |
    | 2*pi     |          | sin(2*pi)           | -0.0              | PASSED |
    | 0        |          | cos(0)              | 1.0               | PASSED |
    | pi       |          | tan(pi)             | -0.0              | PASSED |
    |          |          | exp(2)              | 7.39              | PASSED |
    |          |          | atan(1.55740772465) | 1.0               | PASSED |
    |          |          | acos(0.54030230586) | 1.0               | PASSED |
    |          |          | asin()              | 1.0               | PASSED |
    |          |          | degrees(pi)         | 180.0             | PASSED |
    |          |          | radians()           | 3.141592653589793 | PASSED |
    |          |          | sqrt(4)             | 2.0               | PASSED |
    |          |          | pow(2,2)            | 4.0               | PASSED |
    |          |          | log(exp(1))         | 1.0               | PASSED |
    |          |          | log10(10**10)       | 10.0              | PASSED |
    |          |          | log2(2**2)          | 2.0               | PASSED |
    |          |          | asinh(sinh(pi))     | 3.141592653589793 | PASSED |
    |          |          | acosh(cosh(pi))     | 3.141592653589793 | PASSED |
    |          |          | atanh(tanh(pi))     | 3.141592653589798 | PASSED |
    #+TBLFM:@2$4=abs($1)::@2$5=passed($-1==1)::@3$4=ceil($1)::@3$5=passed($-1==2)::@4$4=floor($1)::@4$5=passed($-1==1)::@5$4=int($1)::@5$5=passed($-1==1)::@6$4=bool($1)::@6$5=passed($-1==False)::@7$4=float($1)::@7$5=passed($-1==1.0)::@8$4=round($1)::@8$5=passed($-1==2.0)::@9$4=trunc($1)::@9$5=passed($-1==1)::@10$4=round(sin(2*pi))::@10$5=passed($-1==0)::@11$4=cos(0)::@11$5=passed($-1==1.0)::@12$4=round(tan(pi))::@12$5=passed($-1==0)::@13$4=exp(2);%.2f::@13$5=passed($-1==7.39)::@19$4=sqrt(4)::@19$5=passed($-1==2.0)::@20$4=pow(2,2)::@20$5=passed($-1==4.0)::@14$4=round(atan(1.55740772465))::@14$5=passed($-1==1)::@15$4=round(acos(0.54030230586))::@15$5=passed($-1==1)::@16$4=round(asin(0.8414709848))::@16$5=passed($-1==1)::@17$4=degrees(pi)::@17$5=passed($-1==180)::@18$4=radians(180.0)::@18$5=passed($-1==pi)::@21$4=log(exp(1))::@21$5=passed($-1==1)::@22$4=log10(10**10)::@22$5=passed($-1==10)::@23$4=log2(2**2)::@23$5=passed($-1==2)::@24$4=asinh(sinh(pi))::@24$5=passed($-1==pi)::@25$4=acosh(cosh(pi))::@25$5=passed($-1==pi)::@26$4=atanh(tanh(pi))::@26$5=passed(round($-1)==round(pi))

** DateTime Functions
   Testing some date and time methods.

    #+NAME: date-time-test
    |           s1           | s2 |   desc   |         result         |   ok   |
    |------------------------+----+----------+------------------------+--------|
    | <2021-03-15 Mon 17:57> |    | now      | <2021-05-19 Wed 00:28> | PASSED |
    |                        |    | minute   | 57                     | PASSED |
    |                        |    | hour     | 17                     | PASSED |
    |                        |    | day      | 15                     | PASSED |
    |                        |    | year     | 2021                   | PASSED |
    |                        |    | month    | 3                      | PASSED |
    |                        |    | time     | 17:57:00               | PASSED |
    |                        |    | date     | <2021-03-15 Mon 17:57> | PASSED |
    | <2021-03-16 Tue 17:57> |    | weekday  | 1                      | PASSED |
    |                        |    | yearday  | 75                     | PASSED |
    | 3d                     |    | duration | 3d                     | PASSED |
    #+TBLFM:@2$4=now()::@2$5=passed(minute(date($-1))==minute(now()))::@3$4=minute(date(@2$1))::@3$5=passed($-1==57)::@4$4=hour(@2$1)::@4$5=passed($-1==17)::@5$4=day(@2$1)::@5$5=passed($-1==15)::@6$4    =year(@2$1)::@6$5=passed($-1==2021)::@7$4=month(@2$1)::@7$5=passed($-1==3)::@8$4=time(@2$1)::@9$4=date(@2$1)::@9$5=passed($-1==@2$1)::@10$4=weekday(date(@10$1))::@11$4=yearday(@10$1)::@11$5=passed($-1==75)::@10$5=passed($-1==1)::@8$5=passed($-1=="17:57:00")::@12$4=duration(@12$1)::@12$5=passed($-1=="3d")

** Range Functions
   Testing out some of the range methods

    | a | b | c | d | e |   desc   | result |   ok   |
    |---+---+---+---+---+----------+--------+--------|
    | 1 | 2 | 3 | 4 | 5 | vsum row |     15 | PASSED |
    | 2 |   |   |   |   | vsum col |     15 | PASSED |
    | 3 |   |   |   |   | vmean    |    3.0 | PASSED |
    | 4 |   |   |   |   | vmax     |      5 | PASSED |
    | 5 |   |   |   |   | vmin     |      1 | PASSED |
    |   |   |   |   |   | vmedian  |      3 | PASSED |
    #+TBLFM:@2$7=vsum($1..$5)::@2$8=passed($-1==15)::@3$7=vsum(@2$1..@6$1)::@3$8=passed($-1==15)::@4$7=vmean(@2$1..@2$5)::@4$8=passed($-1==3.0)::@5$7=vmax(@2$1..@2$5)::@5$8=passed($-1==5)::@6$7=vmin(@2$1..@2$5)::@6$8=passed($-1==1)::@7$7=vmedian(@2$1..@2$5)::@7$8=passed($-1==3)

** Remote References
   Extract a result from somewhere else and use it in this table.

    |         result         |   ok   |
    |------------------------+--------|
    | <2021-03-15 Mon 17:57> | PASSED |
    #+TBLFM:@2$1=remote("date-time-test",@2$1)::@2$2=passed(minute($-1)==57)


** Side Relative References
   Relative to the edges of the table

    | a | b | c | d | result |   ok   |
    |---+---+---+---+--------+--------|
    | 1 | 2 | 3 | 4 |      1 | PASSED |
    | 1 | 2 | 3 | 4 |      2 | PASSED |
    | 1 | 2 | 3 | 4 |      3 | PASSED |
    | 1 | 2 | 3 | 4 |      4 | PASSED |
    #+TBLFM:@2$5=$<::@3$5=$<<::@4$5=$<<<::@2$6=passed($-1==1)::@3$6=passed($-1==2)::@4$6=passed($-1==3)::@5$5=$>>>::@5$6=passed($-1==4)

    Row relative copy
    | a  |   b    | c  |   d    | e |
    |----+--------+----+--------+---|
    |  1 | 2      |  3 | 4      | 5 |
    |  1 | 2      |  3 | 4      | 5 |
    |  5 | 4      |  3 | 2      | 1 |
    |  5 | 4      |  3 | 2      | 1 |
    | 15 | PASSED | 15 | PASSED |   |
    #+TBLFM:@3=@<::@4=@>>::@6$1=vsum(@4$1..@4$5)::@6$2=passed($1==15)::@6$3=vsum(@3$1..@3$5)::@6$4=passed($-1==15)

** Range Source and Targets
   Using block ranges to specify destination

    |  a   |  b   |  c   |  d   |  e   |        |
    |------+------+------+------+------+--------|
    | 0.67 | 0.90 | 0.67 |  0.9 | True | PASSED |
    | 0.83 | 0.27 | 0.83 | 0.27 | True | PASSED |
    | 0.93 | 0.29 | 0.93 | 0.29 | True | PASSED |
    | 0.16 | 0.55 | 0.16 | 0.55 | True | PASSED |
    #+TBLFM:@2$1..@5$2=rand();%.2f::@2$3..@5$4=$-2::$5=True if $-4==$-2 and $-3==$-1 else False::$6=passed($-1)

** Advanced Table Syntax
   Some of the advanced table bits and pieces

    |   | results |    |   |   |   |        |
    |---+---------+----+---+---+---+--------|
    | ! | a       | b  | c | d | e |        |
    | # | 9       |    |   | 4 | 5 | PASSED |
    | # | 3       | 1  | 2 |   |   | PASSED |
    | $ | max=5   |    |   |   |   |        |
    | # | 15      | 10 |   |   |   | PASSED |
    #+TBLFM:@4$2=$b + $c::@3$2=$e+$d::@3$7=passed($a==9)::@4$7=passed($a==3)::@6$2=$max+$b::@6$7=passed($a==15)


** Remote Tables Of Different Dimensions
    #+NAME: longer-table
    | a | b | c |
    | 1 | 2 |   |

    #+NAME: should-be-b
    | b |
    #+TBLFM:@1$1=remote('longer-table',@1$2)

    | b | PASSED |
    #+TBLFM:@1$1=remote('should-be-b',@1$1)::@1$2=passed($-1=='b')

** Long Tables and Plots
   Lets test a long table and plot it.
   Eventually table computation bogs down at this size.

   #+PLOT: title:"Random" ind:1 deps:(3) with:lines file:out.png
   |  a  |  b   |  c   |
   |-----+------+------|
   |   2 | 0.69 | 0.50 |
   |   3 | 0.96 | 0.46 |
   |   4 | 0.74 | 0.35 |
   |   5 | 0.10 | 0.24 |
   |   6 | 0.74 | 0.58 |
   |   7 | 0.79 | 0.56 |
   |   8 | 1.00 | 0.71 |
   |   9 | 0.64 | 0.10 |
   |  10 | 0.38 | 0.42 |
   |  11 | 0.74 | 0.97 |
   |  12 | 0.12 | 0.34 |
   |  13 | 0.65 | 0.02 |
   |  14 | 0.78 | 1.00 |
   |  15 | 0.42 | 0.46 |
   |  16 | 0.83 | 0.65 |
   |  17 | 0.39 | 0.76 |
   |  18 | 0.68 | 0.30 |
   |  19 | 0.79 | 0.51 |
   |  20 | 0.71 | 0.70 |
   |  21 | 0.72 | 0.40 |
   |  22 | 0.51 | 0.01 |
   |  23 | 0.16 | 0.16 |
   |  24 | 0.30 | 0.25 |
   |  25 | 0.99 | 0.05 |
   |  26 | 0.10 | 0.39 |
   |  27 | 0.59 | 0.43 |
   |  28 | 0.61 | 0.62 |
   |  29 | 0.90 | 0.85 |
   |  30 | 0.80 | 0.79 |
   |  31 | 0.26 | 0.10 |
   |  32 | 0.47 | 0.09 |
   |  33 | 0.22 | 0.42 |
   |  34 | 0.63 | 0.88 |
   |  35 | 0.33 | 0.07 |
   |  36 | 0.80 | 0.11 |
   |  37 | 0.90 | 0.10 |
   |  38 | 0.99 | 0.77 |
   |  39 | 0.88 | 0.30 |
   |  40 | 0.94 | 0.78 |
   |  41 | 0.61 | 0.14 |
   |  42 | 0.36 | 0.68 |
   |  43 | 0.73 | 0.59 |
   |  44 | 0.23 | 0.77 |
   |  45 | 0.90 | 0.63 |
   |  46 | 0.35 | 0.14 |
   |  47 | 0.66 | 0.41 |
   |  48 | 0.35 | 0.73 |
   |  49 | 0.17 | 0.10 |
   |  50 | 0.92 | 0.89 |
   |  51 | 0.64 | 0.80 |
   |  52 | 0.19 | 0.15 |
   |  53 | 0.99 | 0.37 |
   |  54 | 0.13 | 0.43 |
   |  55 | 0.40 | 0.14 |
   |  56 | 0.30 | 0.03 |
   |  57 | 0.09 | 0.12 |
   |  58 | 0.10 | 0.01 |
   |  59 | 0.08 | 0.82 |
   |  60 | 0.13 | 0.56 |
   |  61 | 0.03 | 0.05 |
   |  62 | 0.59 | 0.32 |
   |  63 | 0.91 | 0.83 |
   |  64 | 0.10 | 0.15 |
   |  65 | 0.96 | 0.87 |
   |  66 | 0.26 | 0.63 |
   |  67 | 0.70 | 0.28 |
   |  68 | 0.50 | 0.70 |
   |  69 | 0.74 | 0.53 |
   |  70 | 0.68 | 0.69 |
   |  71 | 0.91 | 0.51 |
   |  72 | 0.89 | 0.25 |
   |  73 | 0.44 | 0.46 |
   |  74 | 0.06 | 0.91 |
   |  75 | 0.15 | 0.88 |
   |  76 | 0.35 | 0.61 |
   |  77 | 0.57 | 0.29 |
   |  78 | 0.85 | 0.03 |
   |  79 | 0.90 | 0.72 |
   |  80 | 0.75 | 0.97 |
   |  81 | 0.61 | 0.69 |
   |  82 | 0.02 | 0.48 |
   |  83 | 0.16 | 0.43 |
   |  84 | 0.76 | 0.98 |
   |  85 | 0.17 | 0.35 |
   |  86 | 0.21 | 0.44 |
   |  87 | 0.45 | 0.78 |
   |  88 | 0.46 | 0.86 |
   |  89 | 0.71 | 0.08 |
   |  90 | 0.14 | 0.20 |
   |  91 | 0.43 | 0.53 |
   |  92 | 0.49 | 0.77 |
   |  93 | 0.71 | 0.78 |
   |  94 | 0.66 | 0.78 |
   |  95 | 0.35 | 0.71 |
   |  96 | 0.91 | 0.21 |
   |  97 | 0.48 | 0.14 |
   |  98 | 0.00 | 0.21 |
   |  99 | 0.62 | 0.66 |
   | 100 | 0.16 | 0.89 |
   #+TBLFM:$1=@#::@2$2..@100$3=rand();%.2f

   #+RESULTS:
   [[file:C:/Users/ihdav/AppData/Roaming/Sublime Text/Packages/OrgExtended/out.png]]

* Full Relative Test
  This was found to be broken in 1.2.32!

  | a | b | c | d |        |        |        |        |
  | 1 | 2 | 3 | 4 |        |        |        |        |
  | 2 | 1 | 5 | 4 | PASSED | PASSED | PASSED | PASSED |
  |   |   | 4 | 5 |        |        |        |        |
  #+TBLFM:@3$1=@-1$+1::@3$2=@-1$-1::@3$3=@+1$+1::@3$4=@+1$-1::@3$5=passed($-4==2)::@3$6=passed($-4==1)::@3$7=passed($-4==5)::@3$8=passed($-4==4)


** Test Table
   | a | b | c | d |
   | 1 | 2 | 3 | 4 |
   | 2 | 3 | 4 | 5 |
   | 3 | 4 | 5 | 6 |

  * Complex Relative Test
  
  | a     | b | c | d |
  | 1     | 2 | 3 | 4 |
  | <ERR> | 2 |   |   |
  #+TBLFM:@3$1=@int($+1)$2
